version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  build:
    docker:
      - image: "cimg/node:20.11.1"
    steps:
      - checkout
      - run:
          name: Set Up Environment Variables
          command: |
            chmod +x ./setup_env.sh
            source ./setup_env.sh
      - restore_cache:
          keys: [frontend-build, backend-build]
      - run:
          name: Install All Dependencies
          command: |
            sudo npm install -g @angular/cli
            npm run install:all
            cd frontend && npm install @angular-devkit/build-angular
      - run:
          name: Frontend Build
          command: npm run frontend:build
      - run:
          name: Backend Build
          command: npm run backend:build
      - run:
          name: Backend Lint
          command: npm run backend:lint
      - save_cache:
          paths: [frontend/node_modules, backend_api/node_modules]
          key: deps-{{ checksum "package.json" }}

  deploy:
    docker:
      - image: "cimg/python:3.11-node"
    steps:
      - checkout
      - run:
          name: Set Up Environment Variables
          command: |
            chmod +x ./setup_env.sh
            source ./setup_env.sh
      - restore_cache:
          keys: ['deps-{{ checksum "package.json" }}']
      - aws-cli/setup:
          profile-name: default
      - run:
                name: Install Node.js
                command: |
                  curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                  sudo apt-get install -y nodejs
                  # Set the specific Node version
                  sudo npm install -g n
                  sudo n 20.11.1
      - run:
          name: Install Elastic Beanstalk CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip install --user awsebcli
            echo 'export PATH=$PATH:$HOME/.local/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Verify EB CLI Installation
          command: eb --version
      - run:
          name: Frontend Deploy
          command: npm run frontend:deploy
      - run:
          name: Backend Deploy
          command: npm run backend:deploy

workflows:
  build-hold-deploy:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: master