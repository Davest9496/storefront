version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1

jobs:
  build:
    docker:
      - image: "cimg/node:20.11.1"
    working_directory: ~/storefront
    steps:
      - checkout
      - run:
          name: Frontend Build
          command: |
            set -e
            cd frontend
            echo "Current directory: $(pwd)"
            
            # Clean start
            rm -rf node_modules package-lock.json
            
            # Create known good .npmrc
            echo "legacy-peer-deps=true" > .npmrc
            echo "strict-peer-dependencies=false" >> .npmrc
            echo "package-lock=true" >> .npmrc
            echo "audit=false" >> .npmrc
            echo "loglevel=verbose" >> .npmrc
            
            # Install dependencies one at a time to identify any issues
            echo "Installing @angular/cli..."
            npm install @angular/cli@19.1.7
            ls -la node_modules/.bin/ng || true
            
            echo "Installing @angular-devkit/build-angular..."
            npm install @angular-devkit/build-angular@19.1.7
            
            echo "Installing core dependencies..."
            npm install @angular/core@19.1.6 \
                      @angular/common@19.1.6 \
                      @angular/compiler@19.1.6 \
                      @angular/compiler-cli@19.1.6 \
                      typescript@5.6.2
            
            echo "Installing remaining dependencies..."
            npm install --legacy-peer-deps
            
            echo "Verifying node_modules structure..."
            ls -la node_modules/.bin
            ls -la node_modules/@angular/cli/bin
            
            echo "Final verification of Angular CLI..."
            command -v ng || true
            which ng || true
            npm list @angular/cli
            
            echo "Starting build with explicit path..."
            node_modules/.bin/ng build --configuration=production
      - run:
          name: Backend Build
          command: npm run backend:build
      - run:
          name: Backend Lint
          command: npm run backend:lint